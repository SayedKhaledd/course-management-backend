on:
  push:
    branches:
      - nobranches
name: No Push to aws

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Check out backend core base service repo
        uses: actions/checkout@v2
        with:
          repository: Connect-Academy/backend-core-service
          path: backend-core-service
          ref: master
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Check out keycloak backend client service repo
        uses: actions/checkout@v2
        with:
          repository: Connect-Academy/keycloak-backend-client
          path: keycloak-backend-client
          ref: master
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker-container

      - name: Authenticate with AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_REGISTRY_URL }}

      - name: Build and Push to ecr
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.AWS_REGISTRY_URL }}/connect-academy/course-management-backend:sha-${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS EC2 Instance
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          port: 22
          script: |
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin ${{ secrets.AWS_REGISTRY_URL }}
            sudo docker pull ${{ secrets.AWS_REGISTRY_URL }}/connect-academy/course-management-backend:sha-${{ github.sha }}
            sudo docker stop course-management-backend || true
            sudo docker rm course-management-backend || true
            sudo docker run -d --restart always -p 0.0.0.0:8090:8090 -e DB_URL=${{ secrets.AWS_DB_URL }} -e DB_USER=${{ secrets.AWS_DB_USER }} -e DB_PASS=${{ secrets.AWS_DB_PASS }} -e KEYCLOAK_URL=${{ secrets.AWS_KEYCLOAK_URL }} -e KEYCLOAK_SECRET=${{ secrets.AWS_KEYCLOAK_SECRET }} --name course-management-backend ${{ secrets.AWS_REGISTRY_URL }}/connect-academy/course-management-backend:sha-${{ github.sha }}
